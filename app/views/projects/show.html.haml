.row
  .col-lg-8
    .project
      %h1.project__name
        = @project.name
      .project__description
        = markdown(@project.description)
      .project__meta
        - if @project.is_public
          %span.label.label-info Public
        - else
          %span.label.label-default Private
        - if @project.github
          %span.label.label-default= @project.github.full_name

      - if can? :update, @project
        .project__actions
          - if @project.active?
            = link_to "Add a member", project_members_path(@project), class: "btn btn-default"
            = link_to "Edit", edit_project_path(@project), class: "btn btn-default"
            = link_to "Close", close_project_path(@project), class: "btn btn-default", method: :patch
          - else
            = link_to "Active", active_project_path(@project), class: "btn btn-default", method: :patch
          = link_to "Export", datum_path(@project, format: :json), class: "btn btn-default"

        - if user_signed_in? && @project.member?(current_user) && current_user.authentications.exists?(["provider = ?", "crowdworks"])
          .crowdworks-contract
            - if @cwcontract
              Crowdworks Contract ID:
              = link_to "#{@cwcontract.contract_id}", "https://crowdworks.jp/contracts/#{@cwcontract.contract_id}"
              = link_to "Edit", edit_crowdworks_contract_path(@project.crowdworks_contracts.find_by(user_id: current_user.id))
              = link_to "Destroy", @cwcontract, method: :delete, "data-confirm" => "Are you sure?"
            - else
              = link_to "Connect Crowdworks Timesheet", new_project_crowdworks_contract_path(@project), class: "btn"
    %hr

    %h2.issues__caption
      = fa_icon "exclamation-circle"
      Issues
    .issues-index

    %h2.comments__caption
      = fa_icon "comments"
      Comments
    #comments
      %ul.media-list
        - @comments.each do |comment|
          %li.media
            .comment
              .comment-author
                = link_to comment.user.name, comment.user
                @ #{time_ago_in_words(comment.created_at)} ago
              .comment-body
                = markdown(comment.body)

    %h2.workloads__caption
      = fa_icon "clock-o"
      WorkLoads
    %ul.media-list.workload-list
      - @workloads.complete.order("updated_at DESC").each do |workload|
        %li.media.workload-list__item
          .pull-left
            = link_to workload.user do
              = image_tag gravatar_url(workload.user.email), class: "img-circle"
          .media-body
            .workload
              - if can? :destroy, workload
                = link_to workload, class: "close", data: { confirm: "Are you sure?" }, method: :delete do
                  &times;
              .workload__duration
                = link_to workload.user.name, workload.user
                %span.text-muted
                  worked #{formatted_time_distance(workload.start_at, workload.end_at)}
                - if can?(:update, workload)
                  = link_to "Edit", edit_workload_path(workload)
              .workload__time
                #{l(workload.start_at, format: :short)} - #{l(workload.end_at, format: :short)}

  .col-lg-4
    .activities.project-activities
      %ul.activities-list.media-list
        = render_activities(@activities, layout: :activity)

:javascript
  (function() {
    var issues = new Timecard.Collections.Issues();
    issues.url = '/projects/'+#{@project.id}+'/issues'
    var workloads = new Timecard.Collections.Workloads();
    var viewIssuesIndex = new Timecard.Views.IssuesIndex({
      project_id: #{@project.id},
      issues: issues,
      workloads: workloads
    })
    viewIssuesIndex.render();
  })();
