.row
  .col-lg-6
    .issue
      .issue__header
        %h1.issue__subject
          = link_to_provider(@issue)
          = @issue.subject
      .issue__meta
        .issue__status
          - if @issue.status == 1
            %span.label.label-success
              = fa_icon "exclamation-circle"
              Open
          - else
            %span.label.label-danger
              = fa_icon "check-circle"
              Closed
        .issue__author.text-muted
          %b= link_to @issue.author.name, @issue.author
          opened this issue on #{@issue.created_at.to_date.to_s(:long)}
        - if can?(:update, @issue)
          = link_to "Edit", edit_issue_path(@issue)

        - if @issue.github
          .issue__labels
            - @issue.github.labels.each do |github_label|
              %span.label.issue__label{ style: "background-color:##{github_label["color"]}" }
                = github_label["name"]

        .issue__assignee.text-muted
          - if @issue.assignee.present?
            = image_tag gravatar_url(@issue.assignee.email, 20)
            %b= link_to @issue.assignee.name, @issue.assignee
            is assigned
          - else
            No one is assigned
          will start at #{@issue.will_start_at || "today"}

      .issue__description
        = @issue.description.present? ? markdown(@issue.description) : "No description given."
      = render 'actions'
    %hr

  .col-lg-6
    %h2
      = link_to @issue.project.name, @issue.project
    = markdown(@issue.project.description)
.row
  .col-lg-6
    %ul.media-list
      = render partial: 'comments/comment', collection: @issue.comments.order("id ASC")
    - if can?(:update, @issue) && @issue.project.active?
      = form_for [@issue, Comment.new] do |f|
        .form-group
          = f.text_area :body, class: "form-control", placeholder: "Leave a comment"
        .actions.text-right
          = f.submit "Comment", class: "btn btn-success"
  .col-lg-6
    .section
      %h3 Workloads
      %ul.media-list
        = render @issue.workloads.complete.order("updated_at DESC")
